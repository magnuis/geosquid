/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/fylker": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Fylker i Norge.
         * @description Oversikt over alle fylker i Norge med fylkesnavn og fylkesnummer.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Sorter resultat etter felt. */
                    sorter?: string;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FylkerEnkel"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fylker/{fylkesnummer}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Vis mer informasjon om et fylke
         * @description Gir informasjon om avgrensingsboks, fylkesnummer, fylkesnavn og kommuner i fylket.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path: {
                    /** @description Fylkesnummer bestående av 2 tegn, med ledende null om nødvendig. */
                    fylkesnummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FylkerKommunerEnkel"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fylker/{fylkesnummer}/omrade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Områdepolygon for et spesifikt fylke
         * @description Områdepolygon for et spesifikt fylke
         */
        get: {
            parameters: {
                query?: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path: {
                    /** @description Fylkesnummer bestående av 2 tegn, med ledende null om nødvendig. */
                    fylkesnummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FylkerEnkelOmrade"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fylkerkommuner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Full informasjon om alle fylker og alle kommuner.
         * @description Henter avgrensningsboks, nummer og navn for alle fylker og kommuner i fylket. Inkluderer informasjon for kommuner som fått i /kommuner/{kommunenummer}.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Sorter listen med kommuner etter felt. */
                    sorterkommuner?: string;
                    /** @description Sorter listen med fylker etter felt. */
                    sorterfylker?: string;
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FylkerKommunerFull"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/kommuner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Kommuner i Norge.
         * @description Kommunenavn og kommunenummer for alle kommuner i Norge.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Sorter resultat etter felt. */
                    sorter?: string;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KomEnkelNorskNavn"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/kommuner/illustrasjonskart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Illustrasjonskart over kommuner i Norge.
         * @description En geojson-featurecollection med grovt forenklede kommunegrenser. Hver kommune er en feature og har kommunenavn og kommunenummer i properties-elementet. Kun ment til å brukes som et illustrasjonskart.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["geoJsonFeatureCollection"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/kommuner/{kommunenummer}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Full informasjon om spesifikk kommune
         * @description Gir informasjon om avgrensingsboks, kommunenummer, kommunenavn, fylket kommunen er i, samt noe tilleggsinformasjon om kommunen.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path: {
                    /** @description kommunenummer bestående av 4 tegn, med ledende null om nødvendig. */
                    kommunenummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KomFull"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/kommuner/{kommunenummer}/nabokommuner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Finn nabokommuner til en kommune
         * @description Finn nabokommuner til en kommune
         */
        get: {
            parameters: {
                query?: {
                    /** @description Sorter resultat etter felt. */
                    sorter?: string;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path: {
                    /** @description kommunenummer bestående av 4 tegn, med ledende null om nødvendig. */
                    kommunenummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KomEnkelNorskNavn"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/kommuner/{kommunenummer}/omrade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Områdepolygon for spesifikk kommune
         * @description Områdepolygon for spesifikk kommune
         */
        get: {
            parameters: {
                query?: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                };
                header?: never;
                path: {
                    /** @description kommunenummer bestående av 4 tegn, med ledende null om nødvendig. */
                    kommunenummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KomEnkelOmrade"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/punkt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Finn kommune og fylke for et gitt geografisk punkt
         * @description Finn kommune og fylke for et gitt geografisk punkt
         */
        get: {
            parameters: {
                query: {
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                    /** @description nord/latitude-koordinaten */
                    nord: number;
                    /** @description øst/longitude-koordinaten */
                    ost: number;
                    /** @description Koordinatsystemet til koordinatene du søker med. Angis som en SRID, for eksempel 4258 eller 25833. */
                    koordsys: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KommuneFylkeEnkel"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sok": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Søk etter kommunenavn.
         * @description Søk etter kommunenavn.
         */
        get: {
            parameters: {
                query: {
                    /** @description Angi det koordinatsystemet som du ønsker at geometrien i returen skal transformeres til. Standard er 4258. */
                    utkoordsys?: number;
                    /** @description Sorter resultat etter felt. */
                    sorter?: string;
                    /** @description Kommaseparert liste med de objektene du ønsker å få returnert. For å hente ut underobjekter bruk "."-notasjon, f.eks.: &filtrer=kommuner.kommunenummer,fylkesnavn */
                    filtrer?: string;
                    /** @description Kommunenavnet du ønsker å søke etter. Wildcard (*) kan benyttes i søket. Spesialtegnene ", ', ;, /, og = kan ikke brukes */
                    knavn: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NavnSokKommune"];
                    };
                };
                /** @description Kunne ikke finne kommunen du søkte etter */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        FylkerEnkel: {
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
        };
        FylkerEnkelOmrade: {
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
            omrade?: components["schemas"]["geoJsonRaw"];
        };
        FylkerKommunerEnkel: {
            avgrensningsboks?: components["schemas"]["geoJsonPoly"];
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
            kommuner?: components["schemas"]["KomEnkel"][];
        };
        FylkerKommunerFull: {
            avgrensningsboks?: components["schemas"]["geoJsonPoly"];
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
            kommuner?: components["schemas"]["KomFull"][];
        };
        KomEnkel: {
            kommunenavn?: string;
            /** @description Nummerering av kommuner. Tekstverdi som må bestå av 4 tall. 0301 er for eksempel gyldig, mens 301 er ikke gyldig. */
            kommunenummer?: string;
        };
        KomEnkelNorskNavn: {
            kommunenavn?: string;
            kommunenavnNorsk?: string;
            /** @description Nummerering av kommuner. Tekstverdi som må bestå av 4 tall. 0301 er for eksempel gyldig, mens 301 er ikke gyldig. */
            kommunenummer?: string;
        };
        KomEnkelOmrade: {
            kommunenavn?: string;
            /** @description Nummerering av kommuner. Tekstverdi som må bestå av 4 tall. 0301 er for eksempel gyldig, mens 301 er ikke gyldig. */
            kommunenummer?: string;
            omrade?: components["schemas"]["geoJsonRaw"];
        };
        KomFull: {
            avgrensningsboks?: components["schemas"]["geoJsonPoly"];
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
            gyldigeNavn?: components["schemas"]["NavnFull"][];
            kommunenavn?: string;
            kommunenavnNorsk?: string;
            /** @description Nummerering av kommuner. Tekstverdi som må bestå av 4 tall. 0301 er for eksempel gyldig, mens 301 er ikke gyldig. */
            kommunenummer?: string;
            punktIOmrade?: components["schemas"]["geoJson"];
            samiskForvaltningsomrade?: boolean;
        };
        KommuneFylkeEnkel: {
            /** @description Navn (norsk) på et fylke */
            fylkesnavn?: string;
            /** @description Nummerering av fylke. Tekstverdi som må bestå av 2 tall. 03 er for eksempel gyldig, mens 3 er ikke gyldig. */
            fylkesnummer?: string;
            kommunenavn?: string;
            /** @description Nummerering av kommuner. Tekstverdi som må bestå av 4 tall. 0301 er for eksempel gyldig, mens 301 er ikke gyldig. */
            kommunenummer?: string;
        };
        NavnFull: {
            navn?: string;
            prioritet?: number;
            sprak?: string;
        };
        NavnSokKommune: {
            antallTreff?: number;
            kommuner?: components["schemas"]["KomFull"][];
        };
        geoJson: {
            coordinates?: number[];
            crs?: components["schemas"]["geoJsonCrs"];
            type?: string;
        };
        geoJsonCrs: {
            properties?: components["schemas"]["geoJsonEpsg"];
            type?: string;
        };
        geoJsonEpsg: {
            name?: string;
        };
        geoJsonFeature: {
            geometry?: components["schemas"]["geoJsonRaw"];
            properties?: components["schemas"]["KomEnkel"];
            type?: string;
        };
        geoJsonFeatureCollection: {
            features?: components["schemas"]["geoJsonFeature"][];
            type?: string;
        };
        geoJsonPoly: {
            coordinates?: number[][][];
            crs?: components["schemas"]["geoJsonCrs"];
            type?: string;
        };
        geoJsonRaw: {
            coordinates?: unknown[];
            crs?: components["schemas"]["geoJsonCrs"];
            type?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
